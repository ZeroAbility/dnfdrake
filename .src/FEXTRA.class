' Gambas class file

Public $SHOWDUPLICATE As String
Public $LOCK As String

Public Sub Form_Open()
 Dim flTTP As File  
 Dim jTTP As Byte
 Dim s$TTP As String
 Dim ss$TTP As New String[]
  'CONTROLLO DISTROSYNC
 Dim flDSTSYNC As File  
 Dim jDSTSYNC As Byte
 Dim s$DSTSYNC As String
 Dim ss$DSTSYNC As New String[] 

'TITOLI E TOOTIP*******************************************************************
 
  Shell "ps aux | grep gbr3 | grep dnfdraketray | wc -l" Wait To $LOCK

  flTTP = Open "/usr/share/dnfdrake/dnfdrake-TTP-" & Fmain.$LANG For Read   ' ...oppure "Input"
  
  
 While Not Eof(flTTP)
   Input #flTTP, s$TTP
   ss$TTP.Add(s$TTP)
  Wend
   Close #flTTP

  For jTTP = 0 To ss$TTP.Max

     CHKOFFLINE.Tooltip = Replace(ss$TTP[45], "_", " ")
     CHKDNFDRAKETRAY.Tooltip = Replace(ss$TTP[46], "_", " ")
     $SHOWDUPLICATE = Replace(ss$TTP[47], "_", " ")
     Next
'  
   flTTP.Close
 '*********************************************************************************
  
 If Fmain.$SECUREMODE = "SECURE" Then
    Fmain.Enabled = False 
 Endif
    
 BTNCLOSE.Text = FCONFIG.BTNOK.Text 
 BTNEXIT.Text = FCONFIG.BTNCLOSE.Text
 
  If Fmain.$OFFLINE = 1 Then
    CHKOFFLINE.Value = True
    Else
      CHKOFFLINE.Value = False
  Endif
 If Fmain.$SEARCH = " --showduplicate" 
   CHKDUPLICATE.Value = True
   Endif
 ' If Fmain.BTNPKGUPDATE.Visible = True 
 '   CHKBTNPKGUPDATE.Value = True
 '   Endif
 ' If Fmain.BTNDOWNDGRADE.Visible = True
 '   CHKBTNDOWNGRADE.Value = True 
 ' Endif
 ' If Fmain.BTNREINSTALL.Visible = True
 '   CHKBTNREINSTALL.Value = True 
 ' Endif
 ' If Fmain.BTNVERSLOCK.Visible = True Then
 '   CHKBTNVERSIONLOCK.Value = True
 '   Else
 '     CHKBTNVERSIONLOCK.Value = False
 ' Endif
 If Fmain.BTNDISTUPDATE.Visible = True Then
   CHKBTNDISTROUPDATE.Value = True
   Else
     CHKBTNDISTROUPDATE.Value = False
 Endif
  If Right(Left($LOCK)) = "2" Then 
  CHKDNFDRAKETRAY.Value = True
  Endif 
' If Exist(User.Home &/ ".config/dnfdrake/locktray") Then
'  CHKDNFDRAKETRAY.Value = True
'  Endif
 
 If Exist(User.Home &/ ".config/autostart/dnfdraketray.desktop") Then
 CHKDNFDRAKETRAYLAUNCH.Value = True
 Endif
 
  flDSTSYNC = Open User.Home &/ ".config/dnfdrake/distrosync" For Read   ' ...oppure "Input"
   While Not Eof(flDSTSYNC)
    Input #flDSTSYNC, s$DSTSYNC
    ss$DSTSYNC.Add(s$DSTSYNC)
   Wend 
   Close #flDSTSYNC
   For jDSTSYNC = 0 To ss$DSTSYNC.Max
      If ss$DSTSYNC[0] = "1" 
        CHKBTNDISTROUPDATE.Value = True
      Else  
       CHKBTNDISTROUPDATE.Value = False
      Endif
   Next 
   flDSTSYNC.Close      
 
 'VECCHIA GESTIONE DISTROSYNC
 ' If Exist(User.Home &/ ".config/dnfdrake/distrosync") Then
 '   CHKBTNDISTROUPDATE.Value = True
 ' Else  
 '   CHKBTNDISTROUPDATE.Value = False
 ' Endif
 
 If Fmain.$VERBOSE = "" Then
   CHKBTNVERBOSE.Value = True
   Else 
     CHKBTNVERBOSE.Value = False
 Endif
 
 ' If Fmain.BTNDNFCLEAN.Visible = True
 '   CHKBTNDNFCLEAN.Value = True 
 ' Endif
 
 If Fmain.$CASE = 1 Then
   CHKIGNORECASE.VALUE = True
 Endif
 
 If Fmain.$AUTOSUSPEND = 1 Then
   CHKAUTOSUSPEND.VALUE = True
 Endif
 
End


Public Sub Label1_MouseDown()
End

Public Sub BTNCLOSE_Click()
   BTNCLOSE.Enabled = False
   Dim $PID As String
   
   If CHKDUPLICATE.VALUE = True Then
   Fmain.$SEARCH = Fmain.$SEARCH & " " & "--showduplicate"
   CHKOFFLINE.Value = False
   Message.Info($SHOWDUPLICATE, "OK")
   Else
   Fmain.$SEARCH = ""
   Endif
  
   ' If CHKBTNPKGUPDATE.VALUE = True Then
   ' Fmain.BTNPKGUPDATE.Visible = True
   ' Else
   ' Fmain.BTNPKGUPDATE.Visible = False
   ' Endif

   ' If CHKBTNDNFCLEAN.VALUE = True Then
   ' Fmain.BTNDNFCLEAN.Visible = True
   ' Else
   ' Fmain.BTNDNFCLEAN.Visible = False
   ' Endif
   
   ' If CHKBTNDOWNGRADE.VALUE = True Then
   ' Fmain.BTNDOWNDGRADE.Visible = True
   ' Else
   ' Fmain.BTNDOWNDGRADE.Visible = False
   ' Endif
   
   ' If CHKBTNREINSTALL.VALUE = True Then
   ' Fmain.BTNREINSTALL.Visible = True
   ' Else
   ' Fmain.BTNREINSTALL.Visible = False
   ' Endif
   ' 
   ' If CHKBTNVERSIONLOCK.Value = True Then
   '   Fmain.BTNVERSLOCK.Visible = True
   '   Fmain.CMBVERSLOCK.Visible = True
   '   Else
   '     Fmain.BTNVERSLOCK.Visible = False
   '     Fmain.CMBVERSLOCK.Visible = False
   ' Endif
   
    If CHKBTNDISTROUPDATE.Value = True And Fmain.BTNDISTUPDATE.Visible = True Then
    Else        
        If CHKBTNDISTROUPDATE.Value = True And Fmain.BTNDISTUPDATE.Visible = False Then
         Fmain.BTNDISTUPDATE.Visible = True
         Fmain.PICBTNDISTUPDATE.Visible = True
         Shell "echo 1 > " & User.Home &/ ".config/dnfdrake/distrosync" Wait
        Else  
          If Not Exist(User.Home &/ ".config/dnfdrake/distrosync") Then
            Else 
              Fmain.BTNDISTUPDATE.Visible = False
              Fmain.PICBTNDISTUPDATE.Visible = False
              Shell ("rm -f " & User.Home &/ ".config/dnfdrake/distrosync") Wait 
              Shell "echo 0 > " & User.Home &/ ".config/dnfdrake/distrosync" Wait
              Fmain.$UPDATE = "sudo dnf clean all; dnf repolist; sudo dnf --refresh upgrade"
              Message.Info("The default command update had to be restored. If you have a custom command restart DnfDrake!", "OK")
          Endif     
        Endif
    Endif    
    
   If CHKDNFDRAKETRAY.VALUE = True Then
   Shell ("/usr/bin/dnfdraketray.gambas")
   Fmain.$KILL = 1
   Else
     Shell "ps aux | grep gbr3 | grep dnfdraketray" Wait To $PID
     $PID = Right(Left($PID, 16), 8)
     Shell "kill " & $PID
     Shell ("rm -f " & User.Home &/ ".config/dnfdrake/locktray")
     Fmain.$KILL = 0
   Endif
   
   If CHKDNFDRAKETRAYLAUNCH.VALUE = True And If Not Exist(User.Home &/ ".config/autostart/dnfdraketray.desktop") Then
   If Not Exist(User.Home &/ ".config/autostart") Then
   Shell ("mkdir " & User.Home &/ ".config/autostart")
   Endif
   Shell ("cp /usr/share/dnfdrake/dnfdraketray.desktop  " & User.Home &/ ".config/autostart/")
   Endif
   
   If CHKDNFDRAKETRAYLAUNCH.VALUE = False And If Exist(User.Home &/ ".config/autostart/dnfdraketray.desktop") Then
     Shell ("rm -f " & User.Home &/ ".config/autostart/dnfdraketray.desktop")
   Endif
    
    If CHKOFFLINE.Value = True Then
      Fmain.$OFFLINE = 1
      Fmain.PCTCONNECT.Visible = False
      Fmain.PCTDISCONNECT.Visible = True
      If Fmain.Btnexp1.Text = "UEXP1" Then
          Fmain.Btnexp1_Click
      Endif
      Else
        Fmain.$OFFLINE = 0
        Fmain.PCTCONNECT.Visible = True
       Fmain.PCTDISCONNECT.Visible = False
        If Fmain.Btnexp1.Text = "UEXP1" Then
          Fmain.Btnexp1_Click
        Endif
        If Fmain.$CASE = 1 Then
          Fmain.$CASE = 0
          Message.Info("Igore Case option have been temporarily disabled", "OK")    
        Endif
    Endif
    
    If CHKBTNVERBOSE.Value = True Then
      Fmain.$VERBOSE = ""
      Fmain.$LOG = "NOLOG"
      Fmain.$SECUREMODE = "NOSECURE"
      Fmain.BTNREPLAY.Visible = False  
      Message.Info("Log recording and SecureMode have been temporarily disabled", "OK")    
    Else
      Fmain.$VERBOSE = " | tee /dev/null " & User.Home & "/.config/dnfdrake/log/last.log"
      Fmain.BTNREPLAY.Visible = True
    Endif
    
    If CHKIGNORECASE.Value = True Then
      Fmain.$CASE = 1
      Shell "> " & User.Home &/ ".config/dnfdrake/ignorecase" Wait
    Else 
      Fmain.$CASE = 0
      Shell ("rm -f " & User.Home &/ ".config/dnfdrake/ignorecase") Wait 
    Endif
    
    If CHKAUTOSUSPEND.Value = True Then
      Fmain.$AUTOSUSPEND = 1
      Shell "> " & User.Home &/ ".config/dnfdrake/autosuspend" Wait
    Else 
      Fmain.$AUTOSUSPEND = 0
      Shell ("rm -f " & User.Home &/ ".config/dnfdrake/autosuspend") Wait 
    Endif
  Me.Close
End

Public Sub CHKDUPLICATE_Click()
End

Public Sub TXTSEARCH_MouseDown()
End


Public Sub Label5_MouseDown()
End

Public Sub CHKDNFDRAKETRAYLAUNCH_Click()
End

Public Sub Button1_Click()

  CHKDNFDRAKETRAY.Value = False
  CHKDNFDRAKETRAYLAUNCH.Value = False
  Shell ("rm -f " & User.Home &/ ".config/dnfdrake/locktray")
  Shell ("rm -f " & User.Home &/ ".config/autostart/dnfdraketray.gambas.desktop")

End

Public Sub CHKOFFLINE_Click()
End


' Public Sub CHKBTNVERSIONLOCK_Click()
' 
'   
' 
' End

Public Sub CHKBTNDISTROUPDATE_Click()
End

Public Sub BTNEXIT_Click()
  BTNEXIT.Enabled = False
  Me.Close
End
Public Sub CHKBTNVERBOSE_Click()

End

Public Sub CHKIGNORECASE_Click()

End
Public Sub CHKAUTOSUSPEND_Click()

  

End
Public Sub Form_Close()

  Fmain.Enabled = True

End

